{"version":3,"sources":["components/InputFile/Input.tsx","views/Upload/Upload.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","views/Upload/UploadModal.tsx","config/Ipfs.ts"],"names":["StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","InputFile","img","onChange","name","id","type","accept","Upload","Page","style","margin","maxWidth","marginTop","UploadModal","StyledSpacer","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","Input","endAdornment","placeholder","startAdornment","value","onDismiss","contractNFT","useNFT","account","useWallet","useState","setName","description","setDescription","file","setFile","units","setUnits","redirect","setRedirect","validateError","setValidateError","load","setLoad","handleName","useCallback","e","currentTarget","handleDescription","handleFile","files","handleUnits","handleConfirm","a","reader","window","FileReader","parseInt","readAsArrayBuffer","onloadend","ipfs","add","Buffer","from","result","error","console","log","ipfsHash","hash","mintNFT","title","hideCloseButton","color","textAlign","marginBottom","fontSize","to","display","justifyContent","alignItems","marginRight","disabled","onClick","width","IPFS","host","port","protocol"],"mappings":"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","file":"static/js/7.d7a9bca0.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n// import Image from '../../assets/input.png'\n\nexport interface InputProps {\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst InputFile: React.FC<InputProps> = ({ onChange }) => {\n  return (\n    <StyledInputWrapper>\n      {/* <IMG src={Image} alt=\"fsd\" key=\"file-upload\" /> */}\n      <StyledInput name='document' id=\"file-upload\" type='file' accept=\".gif, image/png, image/jpeg, image/jpg\" onChange={onChange} />\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  /* display: none; */\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nconst IMG = styled.img`\n  width: 200px;\n  height: auto;\n  \n`\n\nexport default InputFile\n\n\n/**\n * \n \n API Key: cd1c9f212b88b6d57875\n API Secret: f459805b6acc4bdaedb966ac5b0e9f97c265549074133ce802ae8f8f309654e8\n JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiI2NjQ5ODk4Ny0wN2RlLTQ4YjMtYTZiNy1hZThkYjNkNzU2NTkiLCJlbWFpbCI6Imx1Y2FzZGVzaWduZXJsdEBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGluX3BvbGljeSI6eyJyZWdpb25zIjpbeyJpZCI6Ik5ZQzEiLCJkZXNpcmVkUmVwbGljYXRpb25Db3VudCI6MX1dLCJ2ZXJzaW9uIjoxfSwibWZhX2VuYWJsZWQiOmZhbHNlfSwiYXV0aGVudGljYXRpb25UeXBlIjoic2NvcGVkS2V5Iiwic2NvcGVkS2V5S2V5IjoiY2QxYzlmMjEyYjg4YjZkNTc4NzUiLCJzY29wZWRLZXlTZWNyZXQiOiJmNDU5ODA1YjZhY2M0YmRhZWRiOTY2YWM1YjBlOWY5N2MyNjU1NDkwNzQxMzNjZTgwMmFlOGY4ZjMwOTY1NGU4IiwiaWF0IjoxNjIzODA3NTg2fQ.EASYb16byrfmdz_Ry1rqj5OLDHPZ5uuYYfjslSW9I7o\n \n */\n","import React from 'react'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport Page from 'components/layout/Page'\nimport UploadModal from './UploadModal'\n\nconst Upload: React.FC = () => {\n  // const [onPresentDeposit] = useModal(<UploadModal />)\n\n  return (\n    <Page>\n        <div style={{ margin: '0 auto', maxWidth: 500, marginTop: 50 }}>\n          <UploadModal />\n        </div>\n    </Page>\n  )\n}\n\nexport default Upload\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React, { useCallback, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Button, Modal, Spinner } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport ModalActions from 'components/ModalActions'\nimport { mintNFT } from 'utils/callHelpers'\nimport { useNFT } from 'hooks/useContract'\nimport Input from '../../components/Input'\nimport InputFile from '../../components/InputFile'\nimport { ipfs } from '../../config/Ipfs'\n\ninterface UploadModalProps {\n  onDismiss?: () => void\n}\n\nconst UploadModal: React.FC<UploadModalProps> = ({onDismiss}) => {\n  const contractNFT = useNFT();\n  const { account }: { account: string } = useWallet()\n\n  // const [price, setPrice] = useState(null);\n  const [name, setName] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [file, setFile] = useState(null);\n  const [units, setUnits] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const [validateError, setValidateError] = useState(false);\n  const [load, setLoad] = useState(false);\n  \n  const handleName = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setName(e.currentTarget.value)\n      setValidateError(false);\n    },\n    [setName],\n  )\n\n  const handleDescription = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setDescription(e.currentTarget.value)\n      setValidateError(false);\n    },\n    [setDescription],\n  )\n\n  const handleFile = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setFile(e.currentTarget.files[0]);\n      setValidateError(false);\n    },\n    [setFile],\n  )\n\n  const handleUnits = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setUnits(e.currentTarget.value);\n      setValidateError(false);\n    },\n    [setUnits],\n  )\n\n  const handleConfirm = useCallback(\n   async () => {\n    const reader = new window.FileReader()\n\n    if(units === '') { setUnits('1'); }; // eslint-disable-line @typescript-eslint/no-extra-semi\n\n    if(parseInt(units) > 5) { setUnits('5') }; // eslint-disable-line @typescript-eslint/no-extra-semi\n    \n    if(name && description && file){ \n      setValidateError(false);\n      setLoad(true);\n\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = async () => {\n        try {\n          // Add image to IPFS\n          ipfs.files.add(Buffer.from(reader.result as ArrayBuffer), async (error, result) => {\n            if (error) {\n              console.log('ERR', error)\n            } else {\n              const ipfsHash = result[0].hash;\n\n              console.log(\"ipfs\", ipfsHash);\n              await mintNFT(contractNFT, ipfsHash, name, description, units, account);\n\n              setRedirect(true);\n            }\n          })\n\n        } catch (error) {\n          console.log(error)\n        }\n        // setLoad(false);\n\n        }\n      }else{\n        setValidateError(true);\n      }\n    },\n\n\n    [file, contractNFT, name, description, account, units]\n\n  )\n\n  return (\n    <Modal title='Create NFT' onDismiss={onDismiss} hideCloseButton>\n      { validateError ? <span style={{ color: \"red\", textAlign: \"center\", marginBottom: 30, fontSize: 18 }}>Required information empty.</span> : null}\n      \n      { redirect ? <Redirect to='/wallet' /> : null }\n\n      <Input\n        endAdornment={null}\n        onChange={handleName}\n        placeholder=\"Name\"\n        value={name}\n      />\n\n      <div style={{ marginTop: 20 }} />\n\n      {load ?\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginRight: 60 }}>\n          <Spinner />\n        </div>\n      : null}\n     \n      <Input\n        endAdornment={null}\n        onChange={handleDescription}\n        placeholder=\"Description\"\n        value={description}\n      />\n\n      <div style={{ marginTop: 20 }} />\n\n      <Input\n        endAdornment={null}\n        onChange={handleUnits}\n        placeholder=\"Units - maximum units: 5\"\n        value={units}\n      />\n\n      <div style={{ marginTop: 20 }} />\n\n      <span style={{ color: \"#c52727\", marginBottom: 3, marginTop: 15, fontSize: 12 }}>\n        ** Attention! Upload only images, in formats (jpg, jpeg, png, gif), if it is another file type, the smart contract will disregard it and you will lose the transaction.\n      </span>\n      <span style={{ color: \"#c52727\", marginBottom: 10, marginTop: 2, fontSize: 12 }}>\n        Other file types will soon be supported.\n      </span>\n\n\n      <InputFile\n        onChange={handleFile}\n      />\n\n      <ModalActions>\n        {/* <Button variant=\"secondary\" onClick={onDismiss}>\n          Cancel\n        </Button> */}\n        <Button\n          disabled={false}\n          onClick={handleConfirm}\n          style={{ width: 300 }}\n        >\n          Create\n        </Button>\n      </ModalActions>\n\n    </Modal>\n  )\n}\n\nexport default UploadModal;","// using the infura.io node, otherwise IPFS requires you to run a\r\n// daemon on your own computer/server.\r\n\r\nimport IPFS from 'ipfs-api'\r\nimport bs58 from 'bs58'\r\n\r\nexport const ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\r\n\r\n// run with local daemon\r\n// const ipfs = new ipfsApi(‘localhost’, ‘5001’, {protocol:‘http’});\r\n\r\n// Return bytes32 hex string from base58 encoded ipfs hash,\r\n// stripping leading 2 bytes from 34 byte IPFS hash\r\n// Assume IPFS defaults: function:0x12=sha2, size:0x20=256 bits\r\n// E.g. \"QmNSUYVKDSvPUnRLKmuxk9diJ6yS96r1TrAXzjTiBcCLAL\" -->\r\n// \"0x017dfd85d4f6cb4dcd715a88101f7b1f06cd1e009b2327a0809d01eb9c91f231\"\r\n\r\nexport const getBytes32FromIpfsHash = (ipfsListing) => {\r\n  const decoded = bs58.decode(ipfsListing)\r\n  return `0x${decoded.slice(2).toString('hex')}`\r\n}\r\n\r\n// Return base58 encoded ipfs hash from bytes32 hex string,\r\n// E.g. \"0x017dfd85d4f6cb4dcd715a88101f7b1f06cd1e009b2327a0809d01eb9c91f231\"\r\n// --> \"QmNSUYVKDSvPUnRLKmuxk9diJ6yS96r1TrAXzjTiBcCLAL\"\r\n\r\nexport const getIpfsHashFromBytes32 = (bytes32Hex) => {\r\n  // Add our default ipfs values for first 2 bytes:\r\n  // function:0x12=sha2, size:0x20=256 bits\r\n  // and cut off leading \"0x\"\r\n  const hashHex = '1220'.concat(bytes32Hex.slice(2))\r\n  const hashBytes = Buffer.from(hashHex, 'hex')\r\n  const hashStr = bs58.encode(hashBytes)\r\n  return hashStr\r\n}\r\n\r\nexport const uploadImage = (\r\n  buffer,\r\n) => async () => {\r\n      console.log('ipfsHash')\r\n\r\n  // Add image to IPFS\r\n  ipfs.files.add(buffer, async (error, result) => {\r\n    if (error) {\r\n      console.log('ERR', error)\r\n    } else {\r\n      const ipfsHash = result[0].hash // base58 encoded multihash\r\n      console.log(ipfsHash)\r\n      // ipfs.files.get(ipfsHash, (_error, files) => {\r\n      //   console.log(files)\r\n      // })\r\n    }\r\n  })\r\n}\r\n"],"sourceRoot":""}