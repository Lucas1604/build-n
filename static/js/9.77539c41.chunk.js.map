{"version":3,"sources":["views/Wallet/components/WalletCard/CardHeading.tsx","components/AddSellInput/AddSellInput.tsx","views/Wallet/components/AddSellModal.tsx","views/Wallet/components/WalletCard/CardActionsContainer.tsx","views/Wallet/components/WalletCard/WalletCard.tsx","views/Wallet/components/WalletCard/CardActionsSell.tsx","views/Wallet/components/WalletCard/WalletCardSell.tsx","views/Wallet/components/WithdrawCard.tsx","views/Wallet/Wallet.tsx","config/constants/constants.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/Input/Input.tsx"],"names":["Wrapper","styled","Flex","CardHeading","image","title","unit","justifyContent","alignItems","mb","src","alt","width","height","style","fontWeight","fontSize","StyledTokenInput","div","StyledSpacer","props","theme","spacing","StyledTokenAdornmentWrapper","StyledTokenSymbol","colors","primary","span","AddSellInput","onChange","value","depositFeeBP","Input","endAdornment","placeholder","AddSellModal","status","tokenId","account","contract","onDismiss","useState","val","setVal","validate","setValidate","pendingTx","setPendingTx","redirect","setRedirect","TranslateString","useI18n","handleChange","useCallback","e","currentTarget","to","color","textAlign","marginBottom","ModalActions","variant","onClick","disabled","a","addNFTSellingItem","Action","CardActions","id","useModal","onPresentWithdraw","mt","fullWidth","FCard","card","background","WalletCard","item","ipfsHash","name","CardActionsContainer","cancelNFTSellingItem","WalletCardSell","ethereum","CardActionsSell","StyledFarmStakingCard","Card","WithdrawCard","balance","margin","display","flexDirection","alignContent","flexWrap","BigNumber","dividedBy","pow","toString","networkSymbol","marginTop","withdrawBalance","FlexLayout","FlexLayoutSpinner","Wallet","farmsProps","useWallet","contractNFT","useNFT","data","setData","dataSell","setDataSell","load","setLoad","owner","setOwner","setBalance","dispatch","useDispatch","fastRefresh","useRefresh","useEffect","getItemsWallet","res","getItemsWalletSell","resSell","getOwner","resOwner","getBalance","resBalance","getData","Page","length","as","size","map","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","children","l","React","Children","toArray","child","i","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","TranslationsContext","StyledInputWrapper","input","radii","default","StyledInput","startAdornment"],"mappings":"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","file":"static/js/9.77539c41.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, ImageCustom } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionProps {\n  image?: string\n  title?: string\n  unit?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  image,\n  title,\n  unit\n}) => {\n  return (\n    <div>\n      <Wrapper justifyContent=\"center\" alignItems=\"center\" mb=\"12px\">\n        <ImageCustom src={image} alt={image} width={250} height={250} />\n      </Wrapper>\n      <Heading mb=\"5px\">{title} <span style={{ fontWeight: 'normal', fontSize: 14 }}> &nbsp; #{unit}</span></Heading>\n    </div>\n  )\n}\n\nexport default CardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  depositFeeBP?: number\n}\n\nconst AddSellInput: React.FC<TokenInputProps> = ({ onChange, value, depositFeeBP = 0 }) => {\n  return (\n    <StyledTokenInput>\n      {/* <StyledMaxText>\n        1\n      </StyledMaxText> */}\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>BNB</StyledTokenSymbol>\n            <StyledSpacer />\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default AddSellInput\n","import React, { useCallback, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport { Redirect } from 'react-router-dom'\nimport ModalActions from 'components/ModalActions'\nimport useI18n from 'hooks/useI18n'\nimport AddSellInput from 'components/AddSellInput'\nimport { addNFTSellingItem } from 'utils/callHelpers'\n\ninterface WithdrawModalProps {\n  status: boolean\n  tokenId: string\n  account: string\n  contract?: any\n  onDismiss?: () => void\n}\n\nconst AddSellModal: React.FC<WithdrawModalProps> = ({ status, tokenId, account, contract, onDismiss }) => {\n  const [val, setVal] = useState(null)\n  const [validate, setValidate] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [redirect, setRedirect] = useState(false);\n\n  const TranslateString = useI18n()\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n      setValidate(false)\n    },\n    [setVal],\n  )\n  const handleConfirm = () => {\n    if(val){\n      addNFTSellingItem(contract, tokenId, val, account);\n      onDismiss();\n      setRedirect(true);\n    }else{\n      setValidate(true);\n    }\n    \n  }\n\n\n  return (\n    <Modal title={`Add the price of your NFT `} onDismiss={onDismiss}>\n\n      { redirect ? <Redirect to='/wallet' /> : null }\n\n      { validate ? <span style={{ color: \"red\", textAlign: \"center\", marginBottom: 30, fontSize: 18 }}>Required information empty.</span> : null}\n\n      <AddSellInput\n        onChange={handleChange}\n        value={val}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            // status ? addNFTSellingItem(contract, tokenId, val, account) : addNFTSellingItem(contract, tokenId, val, account)\n            handleConfirm()\n            setPendingTx(false)\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default AddSellModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\n\nimport AddSellModal from '../AddSellModal'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\ninterface FarmCardActionsProps {\n  contract?: any\n  account?: string\n  id?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ contract, id, account }) => {\n\n\n  const [onPresentWithdraw] = useModal(\n    <AddSellModal status={null} tokenId={id} account={account} contract={contract} />,\n  )\n\n  return (\n    <Action>\n      <Button mt=\"8px\" fullWidth disabled={false} onClick={onPresentWithdraw}>\n        Add to Sale\n      </Button>\n  \n    </Action>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Farm } from 'state/types'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\ninterface FarmCardProps {\n  account?: string\n  item?: any\n  contract?: any\n}\n\nconst WalletCard: React.FC<FarmCardProps> = ({ account, item, contract }) => {\n  return (\n    <FCard>\n      <CardHeading\n        image={`https://ipfs.io/ipfs/${item.ipfsHash}`}\n        title={item.name}\n        unit={item.unit}\n\n      />\n      <CardActionsContainer contract={contract} id={item.id} account={account} />\n    </FCard>\n  )\n}\n\nexport default WalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\n\nimport { cancelNFTSellingItem } from 'utils/callHelpers'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\ninterface FarmCardActionsProps {\n  contract?: any\n  account?: string\n  id?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ contract, id, account }) => {\n\n  return (\n    <Action>\n      <Button mt=\"8px\" fullWidth disabled={false} onClick={() => cancelNFTSellingItem(contract, id, account)}>\n        Cancel Selling\n      </Button>\n  \n    </Action>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport CardHeading from './CardHeading'\nimport CardActionsSell from './CardActionsSell'\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\ninterface WalletCardProps {\n  ethereum?: provider\n  account?: string\n  item?: any\n  contract?: any\n}\n\nconst WalletCardSell: React.FC<WalletCardProps> = ({ ethereum, account, item, contract }) => {\n\n  return (\n    <FCard>\n      <CardHeading\n        image={`https://ipfs.io/ipfs/${item.ipfsHash}`}\n        title={item.name}\n        unit={item.unit}\n      />\n      \n      <CardActionsSell contract={contract} id={item.id} account={account} />\n    </FCard>\n  )\n}\n\nexport default WalletCardSell\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Button, Heading } from '@pancakeswap-libs/uikit'\r\nimport { withdrawBalance } from 'utils/callHelpers'\r\nimport { networkSymbol } from 'config/constants/constants'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 120px;\r\n  width: 400px !important;\r\n  @media (max-width: 768px) {\r\n    margin: 0 auto;\r\n    width: 320px !important;\r\n    margin-top: 0px;\r\n\r\n  }\r\n\r\n`\r\n\r\nconst WithdrawCard = ({ account, contract, balance}) => {\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody style={{ margin: '0 auto', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignContent: 'center' }}>\r\n      <div style={{ margin: '0 auto', display: 'flex', flexDirection: 'column', justifyContent: 'center', textAlign: 'center', flexWrap: 'wrap' }}>\r\n        <div style={{ margin: '0 auto', display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n\r\n          <Heading mb=\"14px\">\r\n            Your balance: {new BigNumber(balance).dividedBy(new BigNumber(10).pow(18)).toString()} {networkSymbol}\r\n          </Heading>\r\n\r\n            <span style={{ color: \"#c52727\", marginBottom: 12, marginTop: 15, fontSize: 10 }}>\r\n              ** Attention! This balance is the accumulated creation and sales fees of NFTs redirected to the address owner.\r\n            </span>\r\n\r\n            <Button\r\n              fullWidth\r\n              onClick={() => withdrawBalance(contract, account)}\r\n            >\r\n               Withdraw\r\n            </Button>\r\n\r\n        </div>\r\n      </div>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default WithdrawCard\r\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading, Spinner } from '@pancakeswap-libs/uikit'\nimport Page from 'components/layout/Page'\nimport useRefresh from 'hooks/useRefresh'\nimport { getBalance, getItemsWallet, getItemsWalletSell, getOwner } from '../../utils/callHelpers'\nimport { useNFT } from '../../hooks/useContract'\nimport WalletCard from './components/WalletCard/WalletCard'\nimport WalletCardSell from './components/WalletCard/WalletCardSell'\nimport WithdrawCard from './components/WithdrawCard'\n\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 24.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nconst FlexLayoutSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-left: 220px;\n  margin-top: 80px;\n\n  & > * {\n    min-width: 280px;\n    max-width: 24.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nconst Wallet: React.FC<FarmsProps> = (farmsProps) => {\n\n  const { account }: { account: string } = useWallet()\n  const contractNFT = useNFT();\n\n  const [data, setData] = useState([]);\n  const [dataSell, setDataSell] = useState([]);\n  const [load, setLoad] = useState(true);\n  const [owner, setOwner] = useState('');\n  const [balance, setBalance] = useState('0');\n\n\n  const dispatch = useDispatch();\n  const { fastRefresh } = useRefresh();\n\n  useEffect(() => {\n    async function getData(){\n      const res = await getItemsWallet(contractNFT, account);\n      const resSell = await getItemsWalletSell(contractNFT, account);\n      const resOwner = await getOwner(contractNFT);\n      const resBalance = await getBalance(contractNFT);\n\n      setBalance(resBalance);\n      setOwner(resOwner);\n      setData(res);\n      setDataSell(resSell);\n      setLoad(false);\n    }\n\n    if(account){\n      getData()\n    }\n  \n  \n  }, [account, dispatch, fastRefresh, contractNFT])\n\n  return (\n    <Page>\n      {load ? \n      <FlexLayoutSpinner>\n        {/* <Spinner /> */}\n      </FlexLayoutSpinner>\n      : \n      <>\n\n        {owner === account? \n          <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', marginBottom: 50 }}>\n            <WithdrawCard contract={contractNFT} account={account} balance={balance} />\n          </div>\n        : null }  \n\n        {data.length ? \n            <div>\n              <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n                My NFTs\n              </Heading>\n\n            \n              <div>\n                <FlexLayout>\n                  { \n                    data.map(item => ( \n                      <WalletCard\n                        key={item.id}\n                        account={account}\n                        item={item}\n                        contract={contractNFT}\n                      />\n                    ))\n                  }\n                </FlexLayout>\n              </div>\n            </div>\n        : \n          null\n        }\n\n        <div>\n          {dataSell.length ? \n            <>\n              <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n                My NFTs for sale\n              </Heading>\n            \n              <FlexLayout>\n                \n                {  \n                  dataSell.map(item => ( \n                    <WalletCardSell\n                      key={item.id}\n                      account={account}\n                      item={item}\n                      contract={contractNFT}\n                    />\n                  ))\n                }\n                \n              </FlexLayout>\n            </>\n          : null}\n        </div>\n      </>\n      }\n\n      { \n        (!dataSell.length && !data.length) ?\n        // <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        //   You still don`t have any NFT :/\n        // </Heading>\n        <FlexLayoutSpinner>\n          <Spinner />\n        </FlexLayoutSpinner>\n        : null\n      }\n      \n    </Page>\n  )\n}\n\nexport default Wallet\n","export const networkSymbol = 'MOVR';\r\nexport const network = 'Moonriver';\r\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n"],"sourceRoot":""}